{"ast":null,"code":"var _jsxFileName = \"/Users/hungtang/Desktop/Udemy/Udemy_react-comple-guide/http_session/src/components/FullPost/FullPost.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './FullPost.css';\n\nclass FullPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loadedPost: null\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.props.id) {\n      //make sure the newly loaded post is different from selectedPostid\n      //or either the loadedPost is not null\n      if (!this.state.loadedPost || this.state.loadedPost && this.state.loadedPost.id !== this.props.id) {\n        axios.get(\"http://jsonplaceholder.typicode.com/posts/\" + this.props.id).then(response => {\n          //when we call setState in componentDidUpdate, it creates an infinite loop.\n          //therefore we want it only update when we load a new post, then how do we did that?\n          this.setState({\n            loadedPost: response.data\n          }); //console.log(response)\n        });\n      }\n    }\n  }\n\n  render() {\n    let post = /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }\n    }, \"Please select a Post!\"); //need to check whether it got the id or not\n\n    if (this.props.id) {\n      post = /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 20\n        }\n      }, \"Loading...\");\n    } //check if axios completes getting the post or not\n    //as soon as we get post, state become true\n\n\n    if (this.state.loadedPost) {\n      post = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"FullPost\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, this.state.loadedPost.title), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, this.state.loadedPost.content), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Edit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"Delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, \"Delete\")));\n    }\n\n    return post;\n  }\n\n}\n\nexport default FullPost;","map":{"version":3,"sources":["/Users/hungtang/Desktop/Udemy/Udemy_react-comple-guide/http_session/src/components/FullPost/FullPost.js"],"names":["React","Component","axios","FullPost","state","loadedPost","componentDidUpdate","props","id","get","then","response","setState","data","render","post","textAlign","title","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BG,KAD6B,GACrB;AACJC,MAAAA,UAAU,EAAE;AADR,KADqB;AAAA;;AAI7BC,EAAAA,kBAAkB,GAAG;AACjB,QAAI,KAAKC,KAAL,CAAWC,EAAf,EAAmB;AACf;AACA;AACA,UAAI,CAAC,KAAKJ,KAAL,CAAWC,UAAZ,IAA2B,KAAKD,KAAL,CAAWC,UAAX,IAAyB,KAAKD,KAAL,CAAWC,UAAX,CAAsBG,EAAtB,KAA6B,KAAKD,KAAL,CAAWC,EAAhG,EAAqG;AAEjGN,QAAAA,KAAK,CAACO,GAAN,CAAU,+CAA+C,KAAKF,KAAL,CAAWC,EAApE,EACKE,IADL,CACUC,QAAQ,IAAI;AACd;AACA;AACA,eAAKC,QAAL,CAAc;AACVP,YAAAA,UAAU,EAAEM,QAAQ,CAACE;AADX,WAAd,EAHc,CAMd;AACH,SARL;AASH;AACJ;AACJ;;AACDC,EAAAA,MAAM,GAAG;AACL,QAAIC,IAAI,gBAAG;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAX,CADK,CAEL;;AACA,QAAI,KAAKT,KAAL,CAAWC,EAAf,EAAmB;AACfO,MAAAA,IAAI,gBAAG;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KALI,CAML;AACA;;;AACA,QAAI,KAAKZ,KAAL,CAAWC,UAAf,EAA2B;AACvBU,MAAAA,IAAI,gBACA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKX,KAAL,CAAWC,UAAX,CAAsBY,KAA3B,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKb,KAAL,CAAWC,UAAX,CAAsBa,OAA1B,CAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAHJ,CADJ;AAUH;;AACD,WAAOH,IAAP;AACH;;AA3C4B;;AA8CjC,eAAeZ,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './FullPost.css';\n\nclass FullPost extends Component {\n    state = {\n        loadedPost: null\n    }\n    componentDidUpdate() {\n        if (this.props.id) {\n            //make sure the newly loaded post is different from selectedPostid\n            //or either the loadedPost is not null\n            if (!this.state.loadedPost || (this.state.loadedPost && this.state.loadedPost.id !== this.props.id)) {\n\n                axios.get(\"http://jsonplaceholder.typicode.com/posts/\" + this.props.id)\n                    .then(response => {\n                        //when we call setState in componentDidUpdate, it creates an infinite loop.\n                        //therefore we want it only update when we load a new post, then how do we did that?\n                        this.setState({\n                            loadedPost: response.data\n                        })\n                        //console.log(response)\n                    })\n            }\n        }\n    }\n    render() {\n        let post = <p style={{ textAlign: 'center' }}>Please select a Post!</p>;\n        //need to check whether it got the id or not\n        if (this.props.id) {\n            post = <p style={{ textAlign: 'center' }}>Loading...</p>;\n        }\n        //check if axios completes getting the post or not\n        //as soon as we get post, state become true\n        if (this.state.loadedPost) {\n            post = (\n                <div className=\"FullPost\">\n                    <h1>{this.state.loadedPost.title}</h1>\n                    <p>{this.state.loadedPost.content}</p>\n                    <div className=\"Edit\">\n                        <button className=\"Delete\">Delete</button>\n                    </div>\n                </div>\n\n            );\n        }\n        return post;\n    }\n}\n\nexport default FullPost;"]},"metadata":{},"sourceType":"module"}